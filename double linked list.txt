//Write a program to create DOUBLE LINKED LIST which include insertion,deletion,diplay the nodes.//

#include <stdio.h>
#include<stdlib.h>
struct node
{
int data;
struct node *Prev, *next;
} *first = NULL, *temp, *t1, *t2 ,*last;
void Insertion ();
void Deletion ();
void Display ();
int main ()
{
int ch;
while (1)
{
printf ("Enter your choice\n1.insertion\n2.deletion\n3.display\n4.exit ");
scanf ("%d", &ch);
switch (ch)
{
case 1:
Insertion ();
break;
case 2:
Deletion ();
break;
case 3:
Display ();
break;
case 4:
exit (0);
default:
printf ("Enter value from 1 to 4");
}
}
return 0;
}
void
Insertion ()
{
int pos, k;
struct node *P;
P = (struct node *) malloc (sizeof (struct node));
printf ("Enter your data");
scanf ("%d", &P->data);
P->Prev = NULL;
P->next = NULL;
if (first == NULL)
{
first = P;
last = P;
}
else
{
printf("Enter your position of insertion 1. Beginning, 2.Last , 3. required node ");
scanf ("%d", &pos);
if (pos == 1)//first position
{
P->next = first;
first->Prev = P;
first = P;
}
else if (pos == 2)//last position
{
last->next = P;
P->Prev = last;
last = P;
}
else
{
printf ("Enter your required position of insertion in b/w nodes ");
scanf ("%d", &k);
t1 = first;
while(k-2>0)
{
t1= t1->next;
k--;
}
t2=t1->next;
t1->next =P;
P->Prev = t1;
P->next = t2;
t2->Prev =P;
}
}
}
void Deletion()
{
struct node *t1,*t2,*del;
int pos;
if(first == NULL)
printf("deletion is not possible");
else if(first -> next == NULL){
printf("only one node is present");
del = first;
printf("%d",del->data);
free(del);
first = NULL;
}
else{
printf("enter your position of deletion:");
scanf("%d",&pos);
t1 = first;
if(pos == 1){
del = first;
first = first -> next;
printf("%d",del->data);
free(del);
}
else
{
while(pos-2 > 0){
t1 = t1 -> next;
pos--;
}
del = t1->next;
t2 = del -> next;
t2->Prev =del;
printf("%d",del->data);
free(del);
t2=t1->next;
free(del);
first = NULL;
}
else{
printf("enter your position of deletion:");
scanf("%d",&pos);
t1 = first;
if(pos == 1){
del = first;
first = first -> next;
printf("%d",del->data);
free(del);
}
else
{
while(pos-2 > 0){
t1 = t1 -> next;
pos--;
}
del = t1->next;
t2 = del -> next;
t2->Prev =del;
printf("%d",del->data);
free(del);
t2=t1->next;